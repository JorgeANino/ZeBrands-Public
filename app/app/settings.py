"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 3.0.8.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
from .envtools import getenv
from datetime import timedelta

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = getenv("SECRET_KEY", default="###SECRET_KEY###")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]
USE_X_FORWARDED_HOST = False
SESSION_COOKIE_HTTPONLY = True


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "rest_framework_simplejwt.token_blacklist",
    "django_extensions",
    "app.utils",
    "corsheaders",
    "catalog_system",
    "user",
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "app.middleware.HealthCheckAwareSessionMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "app.middleware.HeaderNoCacheMiddleware",
]

ROOT_URLCONF = "app.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [f"{BASE_DIR}/templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "app.wsgi.application"


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases


DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": getenv("POSTGRES_DEFAULT_DB", default="postgres"),
        "USER": getenv("POSTGRES_DEFAULT_USER", default="postgres"),
        "PASSWORD": getenv("POSTGRES_DEFAULT_PASSWORD", default="postgres"),
        "HOST": getenv("POSTGRES_DEFAULT_HOSTNAME", default="postgres"),
        "PORT": 5432,
        "CONN_MAX_AGE": 600,
        "DISABLE_SERVER_SIDE_CURSORS": True,
    },
}

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://{}:6379/0".format(
            getenv("REDIS_CACHE_HOSTNAME", default="redis")
        ),
        "OPTIONS": {"CLIENT_CLASS": "django_redis.client.DefaultClient"},
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",  # noqa: E501;
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",  # noqa: E501;
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",  # noqa: E501;
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",  # noqa: E501;
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = "/static/static/"
MEDIA_URL = "/static/media/"

MEDIA_ROOT = "/vol/web/media"
STATIC_ROOT = "/vol/web/static"

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


REST_FRAMEWORK = {
    "DEFAULT_RENDERER_CLASSES": ["rest_framework.renderers.JSONRenderer"],
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ],
}

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": getenv(
        "ACCESS_TOKEN_LIFETIME",
        default=timedelta(days=1)
    ),
    "REFRESH_TOKEN_LIFETIME": getenv(
        "REFRESH_TOKEN_LIFETIME", default=timedelta(days=1)
    ),
    "ROTATE_REFRESH_TOKENS": True,
    "BLACKLIST_AFTER_ROTATION": True,
}


if getenv("BROWSABLE_API_RENDERER", default=False, coalesce=bool):
    REST_FRAMEWORK["DEFAULT_RENDERER_CLASSES"] = REST_FRAMEWORK[
        "DEFAULT_RENDERER_CLASSES"
    ] + ["rest_framework.renderers.BrowsableAPIRenderer"]

AUTH_USER_MODEL = "user.CatalogUser"

ACCOUNT_USER_MODEL_USERNAME_FIELD = "email"

VCR_RECORD_MODE = getenv("VCR_RECORD_MODE", default="once")

DOMAIN = getenv("DOMAIN", default="http://localhost:3000")

AWS_ACCESS_KEY_ID = getenv("AWS_ACCESS_KEY_ID", default=None)
AWS_SECRET_ACCESS_KEY = getenv("AWS_SECRET_ACCESS_KEY", default=None)

EMAIL_BACKEND = "django_ses.SESBackend"
# EMAIL_HOST = "smtpout.secureserver.net"
# EMAIL_PORT = 465
EMAIL_HOST = "smtp.gmail.com"
EMAIL_PORT = 587
EMAIL_USE_SSL = False
EMAIL_USE_TLS = True

EMAIL_HOST_USER = getenv("EMAIL_ADDRESS", default=None)

EMAIL_ADDRESS = getenv("EMAIL_ADDRESS", default=None)

DEFAULT_FROM_EMAIL = getenv("EMAIL_ADDRESS", default=None)

EMAIL_HOST_PASSWORD = getenv("EMAIL_PASSWORD", default=None)

UPDATE_PRODUCT_EMAIL_MAIL_HTML = "updated_product_email.html"
UPDATE_PRODUCT_EMAIL_MAIL_PLAIN = "updated_product_email.txt"
